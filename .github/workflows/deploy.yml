name: Java CI 

# main 브랜치에 push, pr 시 동작 
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

# 환경 변수 설정
env:
  # s3 이름
  S3_BUCKET_NAME: s3-dayoffmanager
  # Codedeploy App 이름 
  CODE_DEPLOY_APPLICATION_NAME: Codedeploy-dayoffmanager
  # Codedeploy Group 이름 
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: dpg-dayoffmanager

# 워크 플로우가 깃 레포에 대한 권한을 읽기만 가능하게 설정
#permissions:
#  contents: read

# 워크 플로우에서 할 작업 정의 한다.
jobs:
  # 깃허브 액션을 빌드하는 Github 클라우드 OS 환경 정의 
  build:
    runs-on: ubuntu-latest

  # 각 스텝 정의 
    steps:
      # 깃허브에서 제공하는 checkout 액션 사용
      - name: Checkout
        uses: actions/checkout@v2
      # JDK 17 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'
      # Gradle 종속성 캐싱하여 빌드 속도를 높임
      - name: Gradle 캐싱
        uses: actions/cache@v3
        with: 
          path: | 
            ~/.gradle/caches
            ~/.gralde/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make application.yml 
        run: |
          cd ./src/main/resources
          touch ./application-dev.yml
          echo "${{ secrets.APPLICATION_DEV }}" > ./application-dev.yml
        shell: bash

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Make zip file
        run: |
          mkdir deploy_$GITHUB_SHA
          cp ./build/libs/*.jar ./deploy_$GITHUB_SHA/
          zip_filename="$GITHUB_RUN_NUMBER-$GITHUB_SHA"
          zip -r -qq -j "./$zip_filename" ./deploy_$GITHUB_SHA

      - name: Configure AWS Credentials 
        uses: aws-actions/configure-aws-credentials@v1
        with: 
          aws-access-key-id : ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 "${{ zip_filename.zip }}" "${{ secrets.S3URL }}/$zip_filename.zip"
