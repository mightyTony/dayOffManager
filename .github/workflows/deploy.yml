name: CI-CD 

# main 브랜치에 push, pr 시 동작 
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

# 환경 변수 설정
env:
  # s3 이름
  S3_BUCKET_NAME: s3-dayoffmanager
  # Codedeploy App 이름 
  CODE_DEPLOY_APPLICATION_NAME: Codedeploy-dayoffmanager
  # Codedeploy Group 이름 
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: dpg-dayoffmanager

# 워크 플로우가 깃 레포에 대한 권한을 읽기만 가능하게 설정
#permissions:
#  contents: read

# 워크 플로우에서 할 작업 정의 한다.
jobs:
  # 깃허브 액션을 빌드하는 Github 클라우드 OS 환경 정의 
  build:
    runs-on: ubuntu-latest

  # 각 스텝 정의 
    steps:
      # 깃허브에서 제공하는 checkout 액션 사용
      - name: Checkout
        uses: actions/checkout@v2
      # JDK 17 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
      # gradle 빌드를 위해 실행 파일에 권한 부여 
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash
      # Gradle 빌드
      - name: Build with Gradle
        run: ./gradlew build
        shell: bash
      # 빌드 파일 .zip 파일로 압축
      - name: Make zip file
        # zip 파일 이름 중복을 방지 하고자 zip파일 이름 => $GITHUB_SHA  ($GITHUB_SHA
        run: zip -r ./$GITHUB_SHA .
      # SECRETS 안의 AWS Credentials 설정
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
         # aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         # aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         # aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip

      # - name: Code Deploy
      #   run: |
      #     aws deploy create-deploy \
      #     --deployment-config-name CodeDeployDefault.AllAtOnce \
      #     --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
      #     --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
      #     --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$GITHUB_SHA.zip
          
      # # 지정한 저장소에서 코드를 워크플로우 환경으로 가져오도록 하는 github Action
      # - uses: actions/checkout@v3

      # # openjdk 17 버전 환경 세팅
      # - name: Set up JDK 17
      #   uses: actions/setup-java@v3
      #   with:
      #     java-version : '17'
      #     distribution: "adopt"

      # # Github secrets로 부터 데이터 받아서, 워크 플로우에 파일을 생성
      # # application.properties 를 코드 내에 두지 않겠다.
      # - name: Make application.properties
      #   run: |
      #     cd ./src/main/resources
      #     touch ./application.properties
      #     echo "${{ secrets.PROPERTIES }}" > ./application.properties
      #   shell: bash

